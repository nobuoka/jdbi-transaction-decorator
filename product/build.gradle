apply plugin: 'com.jfrog.artifactory'
artifactoryPublish.skip = true

Map<String, String> env = System.getenv()
def releaseProperties = [
        artifactIdBase : 'transaction-decorator',
        vcsUrl : 'https://github.com/nobuoka/ComponentsRecyclerAdapter',

        artifactoryContextUrl : project.hasProperty('artifactory_contextUrl') ?
                project.property('artifactory_contextUrl') :
                env.getOrDefault('ARTIFACTORY_CONTEXT_URL', 'ARTIFACTORY-CONTEXT-URL-NOT-SPECIFIED'),
        artifactoryUser : project.hasProperty('artifactory_user') ?
                project.property('artifactory_user') :
                env.getOrDefault('ARTIFACTORY_USER', 'ARTIFACTORY-USER-NOT-SPECIFIED'),
        artifactoryPassword : project.hasProperty('artifactory_password') ?
                project.property('artifactory_password') :
                env.getOrDefault('ARTIFACTORY_PASSWORD', 'ARTIFACTORY-PASSWORD-NOT-SPECIFIED'),
        bintrayRepo : 'maven',
        bintrayPackageName : 'jdbi-transaction-decorator',
        bintrayPackageVersion : rootProject.ext.version,
        bintrayUser : project.hasProperty('bintray_user') ?
                project.property('bintray_user') :
                env.getOrDefault('BINTRAY_USER', 'BINTRAY-USER-NOT-SPECIFIED'),
        bintrayKey : project.hasProperty('bintray_key') ?
                project.property('bintray_key') :
                env.getOrDefault('BINTRAY_KEY', 'BINTRAY-KEY-NOT-SPECIFIED'),
]

artifactory {
    contextUrl = releaseProperties.artifactoryContextUrl
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = releaseProperties.artifactoryUser
            password = releaseProperties.artifactoryPassword
            maven = true
        }
    }
    resolve {
        repository {
            repoKey = 'jcenter'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'com.jfrog.bintray'

    group rootProject.ext.group
    version rootProject.ext.version

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    afterEvaluate { project ->
        project.task('sourceJar', type: Jar) {
            from project.sourceSets.main.allJava
        }
        project.task('javadocJar', type: Jar) {
            from project.javadoc
        }

        project.publishing {
            publications {
                mavenJava(MavenPublication) {
                    from project.components.java
                    artifact project.tasks.sourceJar {
                        classifier 'sources'
                    }
                    artifact project.tasks.javadocJar {
                        classifier 'javadoc'
                    }

                    String artifactIdSuffix = project.ext.has('artifactIdSuffix') ? "-${project.ext.get('artifactIdSuffix')}" : ''
                    artifactId "${releaseProperties.artifactIdBase}${artifactIdSuffix}"
                }
            }
        }

        project.artifactoryPublish {
            publications(project.publishing.publications.mavenJava)
        }

        project.bintray {
            user = releaseProperties.bintrayUser
            key = releaseProperties.bintrayKey
            publications = ['mavenJava']
            pkg {
                repo = releaseProperties.bintrayRepo
                name = releaseProperties.bintrayPackageName
                licenses = ['Apache-2.0']
                vcsUrl = releaseProperties.vcsUrl
                version {
                    name = releaseProperties.bintrayPackageVersion
                }
            }
        }
    }
}
